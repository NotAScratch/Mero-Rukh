/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.merorukh.views;

import static com.merorukh.controllers.BinarySearchAlgorithm.performBinarySearchAll;
import com.merorukh.controllers.MergeSortAlgorithm;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.merorukh.models.MeroRukhModel;
import com.merorukh.utils.StringUtils;
import static com.merorukh.utils.StringUtils.WARNING_PROMPT_ALPHABETS;
import static com.merorukh.utils.StringUtils.WARNING_PROMPT_NUMBERS;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author SamirDON
 */
public class MeroRukh extends javax.swing.JFrame {

    /**
     * Creates new form MeroRukh2
     */
    public MeroRukh() {
        initComponents();
    }
                                                
    private final ArrayList<MeroRukhModel> tree_list = new ArrayList<>(); 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbpane_home = new javax.swing.JTabbedPane();
        tbpane_main = new javax.swing.JTabbedPane();
        pnl_main = new javax.swing.JPanel();
        txt_search = new javax.swing.JTextField();
        scrlpane_table = new javax.swing.JScrollPane();
        tbl_trees = new javax.swing.JTable();
        btn_search = new javax.swing.JButton();
        cmb_sort = new javax.swing.JComboBox<>();
        btn_sortasc = new javax.swing.JButton();
        btn_sortdesc = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        lbl_logo = new javax.swing.JLabel();
        btn_nextpage = new javax.swing.JButton();
        pnl_add = new javax.swing.JPanel();
        txt_treeName = new javax.swing.JTextField();
        txt_scientificName = new javax.swing.JTextField();
        txt_height = new javax.swing.JTextField();
        txt_width = new javax.swing.JTextField();
        btn_add = new javax.swing.JButton();
        lbl_addtrees = new javax.swing.JLabel();
        btn_updateMain = new javax.swing.JButton();
        slider_age = new javax.swing.JSlider();
        cmb_location = new javax.swing.JComboBox<>();
        txt_age = new javax.swing.JTextField();
        btn_back = new javax.swing.JButton();
        cmb_shape = new javax.swing.JComboBox<>();
        spinner_serialNo = new javax.swing.JSpinner();
        lbl_info = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 153));
        setLocation(new java.awt.Point(50, 50));
        setResizable(false);

        tbpane_main.setBackground(new java.awt.Color(0, 102, 51));
        tbpane_main.setForeground(new java.awt.Color(204, 204, 204));

        pnl_main.setBackground(new java.awt.Color(0, 102, 102));
        pnl_main.setPreferredSize(new java.awt.Dimension(747, 350));

        txt_search.setBackground(new java.awt.Color(0, 102, 102));
        txt_search.setForeground(new java.awt.Color(255, 255, 255));
        txt_search.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(204, 204, 204))); // NOI18N
        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });

        tbl_trees.setBackground(new java.awt.Color(51, 102, 0));
        tbl_trees.setForeground(new java.awt.Color(204, 204, 204));
        tbl_trees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Oak", "Quercus", "20", "15", "North America", "50", "Broad"},
                {"2", "Maple", "Acer", "15", "10", "North America", "40", "Upright"},
                {"3", "Pine", "Pinus", "30", "15", "Europe", "60", "Pyramid"},
                {"4", "Birch", "Betula", "40", "24", "Asia", "30", "Triangle"},
                {"5", "Willow", "Salix", "12", "6", "Europe", "30", "Weeping"},
                {"6", "Fur", "Abies", "22", "11", "North America", "55", "Upright"},
                {"7", "Cedar", "Cedrus", "30", "14", "Europe", "70", "Broad"},
                {"8", "RedWood", "Sequoia", "28", "7", "North America", "65", "Triangle"},
                {"9", "Cherry", "Prunus", "14", "15", "Asia", "35", "Broad"}
            },
            new String [] {
                "SNo", "Tree Name", "Scientific Name", "Max Height(M)", "Max Width(M)", "Origin", "Age", "Shape"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_trees.getTableHeader().setReorderingAllowed(false);
        tbl_trees.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_treesMouseClicked(evt);
            }
        });
        scrlpane_table.setViewportView(tbl_trees);
        if (tbl_trees.getColumnModel().getColumnCount() > 0) {
            tbl_trees.getColumnModel().getColumn(0).setPreferredWidth(15);
            tbl_trees.getColumnModel().getColumn(1).setPreferredWidth(50);
            tbl_trees.getColumnModel().getColumn(3).setPreferredWidth(50);
            tbl_trees.getColumnModel().getColumn(4).setPreferredWidth(50);
            tbl_trees.getColumnModel().getColumn(6).setPreferredWidth(30);
            tbl_trees.getColumnModel().getColumn(7).setPreferredWidth(50);
        }

        btn_search.setBackground(new java.awt.Color(0, 102, 102));
        btn_search.setForeground(new java.awt.Color(204, 204, 204));
        btn_search.setText("Search");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        cmb_sort.setBackground(new java.awt.Color(0, 102, 102));
        cmb_sort.setForeground(new java.awt.Color(204, 204, 204));
        cmb_sort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Serial_Number", "Tree_Name", "Height", " " }));
        cmb_sort.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sort By", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 10))); // NOI18N

        btn_sortasc.setBackground(new java.awt.Color(0, 102, 102));
        btn_sortasc.setForeground(new java.awt.Color(204, 204, 204));
        btn_sortasc.setText("Ascending");
        btn_sortasc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sortascActionPerformed(evt);
            }
        });

        btn_sortdesc.setBackground(new java.awt.Color(0, 102, 102));
        btn_sortdesc.setForeground(new java.awt.Color(204, 204, 204));
        btn_sortdesc.setText("Descending");
        btn_sortdesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sortdescActionPerformed(evt);
            }
        });

        btn_delete.setBackground(new java.awt.Color(0, 102, 102));
        btn_delete.setForeground(new java.awt.Color(204, 204, 204));
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_update.setBackground(new java.awt.Color(0, 102, 102));
        btn_update.setForeground(new java.awt.Color(204, 204, 204));
        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        lbl_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/merorukh/views/newlogo.png"))); // NOI18N
        lbl_logo.setText("jLabel1");

        btn_nextpage.setBackground(new java.awt.Color(0, 102, 102));
        btn_nextpage.setForeground(new java.awt.Color(204, 204, 204));
        btn_nextpage.setText("ADD New Page ->");
        btn_nextpage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextpageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_mainLayout = new javax.swing.GroupLayout(pnl_main);
        pnl_main.setLayout(pnl_mainLayout);
        pnl_mainLayout.setHorizontalGroup(
            pnl_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_mainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_mainLayout.createSequentialGroup()
                        .addGroup(pnl_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_mainLayout.createSequentialGroup()
                                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_search)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 186, Short.MAX_VALUE)
                                .addComponent(cmb_sort, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(btn_sortasc)
                                .addGap(18, 18, 18)
                                .addComponent(btn_sortdesc)
                                .addGap(17, 17, 17))
                            .addComponent(scrlpane_table))
                        .addContainerGap())
                    .addGroup(pnl_mainLayout.createSequentialGroup()
                        .addComponent(btn_update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_delete)
                        .addGap(253, 253, 253)
                        .addComponent(btn_nextpage)
                        .addGap(32, 32, 32))))
            .addGroup(pnl_mainLayout.createSequentialGroup()
                .addGap(342, 342, 342)
                .addComponent(lbl_logo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnl_mainLayout.setVerticalGroup(
            pnl_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_mainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_logo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnl_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnl_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_sortdesc)
                            .addComponent(btn_sortasc))
                        .addGroup(pnl_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_search)))
                    .addComponent(cmb_sort, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addComponent(scrlpane_table, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnl_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_update)
                    .addComponent(btn_delete)
                    .addComponent(btn_nextpage))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        tbpane_main.addTab("Home", pnl_main);

        pnl_add.setBackground(new java.awt.Color(0, 102, 102));

        txt_treeName.setBackground(new java.awt.Color(0, 102, 102));
        txt_treeName.setForeground(new java.awt.Color(204, 204, 204));
        txt_treeName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tree Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(204, 204, 204))); // NOI18N
        txt_treeName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_treeNameKeyTyped(evt);
            }
        });

        txt_scientificName.setBackground(new java.awt.Color(0, 102, 102));
        txt_scientificName.setForeground(new java.awt.Color(204, 204, 204));
        txt_scientificName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Scientific Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(204, 204, 204))); // NOI18N
        txt_scientificName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_scientificNameActionPerformed(evt);
            }
        });
        txt_scientificName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_scientificNameKeyTyped(evt);
            }
        });

        txt_height.setBackground(new java.awt.Color(0, 102, 102));
        txt_height.setForeground(new java.awt.Color(204, 204, 204));
        txt_height.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Maximum Height(Meters)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(204, 204, 204))); // NOI18N
        txt_height.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_heightActionPerformed(evt);
            }
        });
        txt_height.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_heightKeyTyped(evt);
            }
        });

        txt_width.setBackground(new java.awt.Color(0, 102, 102));
        txt_width.setForeground(new java.awt.Color(204, 204, 204));
        txt_width.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Maximum Width(Meters)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(204, 204, 204))); // NOI18N
        txt_width.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_widthActionPerformed(evt);
            }
        });
        txt_width.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_widthKeyTyped(evt);
            }
        });

        btn_add.setBackground(new java.awt.Color(0, 102, 102));
        btn_add.setForeground(new java.awt.Color(204, 204, 204));
        btn_add.setText("ADD TO TABLE");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        lbl_addtrees.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbl_addtrees.setForeground(new java.awt.Color(51, 153, 0));
        lbl_addtrees.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_addtrees.setText("ADD A NEW TREE");

        btn_updateMain.setBackground(new java.awt.Color(0, 102, 102));
        btn_updateMain.setForeground(new java.awt.Color(204, 204, 204));
        btn_updateMain.setText("UPDATE DATA");
        btn_updateMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateMainActionPerformed(evt);
            }
        });

        slider_age.setBackground(new java.awt.Color(0, 102, 102));
        slider_age.setForeground(new java.awt.Color(204, 204, 204));
        slider_age.setMajorTickSpacing(10);
        slider_age.setMinorTickSpacing(1);
        slider_age.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "AGE(YEARS)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(204, 204, 204))); // NOI18N
        slider_age.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider_ageStateChanged(evt);
            }
        });

        cmb_location.setBackground(new java.awt.Color(0, 102, 102));
        cmb_location.setForeground(new java.awt.Color(51, 51, 51));
        cmb_location.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Asia", "Europe", "North America", "South America", "South East Asia" }));
        cmb_location.setBorder(javax.swing.BorderFactory.createTitledBorder("Origin(Continent)"));
        cmb_location.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_locationActionPerformed(evt);
            }
        });

        txt_age.setBackground(new java.awt.Color(0, 102, 102));
        txt_age.setForeground(new java.awt.Color(204, 204, 204));
        txt_age.setBorder(null);
        txt_age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ageActionPerformed(evt);
            }
        });

        btn_back.setBackground(new java.awt.Color(0, 102, 102));
        btn_back.setForeground(new java.awt.Color(204, 204, 204));
        btn_back.setText("<- Home");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        cmb_shape.setBackground(new java.awt.Color(0, 102, 102));
        cmb_shape.setForeground(new java.awt.Color(51, 51, 51));
        cmb_shape.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pyramid", "Oblong", "Broad", "Triangle", "Weeping", "Upright" }));
        cmb_shape.setSelectedItem("Select Shape");
        cmb_shape.setBorder(javax.swing.BorderFactory.createTitledBorder("Tree Shape"));
        cmb_shape.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_shapeActionPerformed(evt);
            }
        });

        spinner_serialNo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Serial Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(204, 204, 204))); // NOI18N

        lbl_info.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        lbl_info.setForeground(new java.awt.Color(204, 204, 204));
        lbl_info.setText("! New Data will automatically added to last index use update to edit the S_no*");

        javax.swing.GroupLayout pnl_addLayout = new javax.swing.GroupLayout(pnl_add);
        pnl_add.setLayout(pnl_addLayout);
        pnl_addLayout.setHorizontalGroup(
            pnl_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_addLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_addLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(lbl_addtrees, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_addLayout.createSequentialGroup()
                        .addComponent(btn_updateMain)
                        .addGap(236, 236, 236)
                        .addComponent(btn_add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_addLayout.createSequentialGroup()
                        .addComponent(cmb_location, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138)
                        .addComponent(slider_age, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 237, Short.MAX_VALUE))
                    .addGroup(pnl_addLayout.createSequentialGroup()
                        .addGroup(pnl_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_addLayout.createSequentialGroup()
                                .addComponent(txt_treeName, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(150, 150, 150)
                                .addComponent(txt_scientificName, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_addLayout.createSequentialGroup()
                                .addComponent(txt_height, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_width, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnl_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmb_shape, 0, 162, Short.MAX_VALUE)
                            .addComponent(spinner_serialNo))
                        .addGap(74, 74, 74))))
            .addGroup(pnl_addLayout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addComponent(lbl_info)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnl_addLayout.setVerticalGroup(
            pnl_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_addLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_addtrees, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(pnl_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_treeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_scientificName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_shape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_height, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_width, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner_serialNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(pnl_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_addLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_addLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(pnl_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(slider_age, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(lbl_info)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_back)
                    .addComponent(btn_updateMain)
                    .addComponent(btn_add))
                .addContainerGap())
        );

        lbl_addtrees.getAccessibleContext().setAccessibleDescription("");
        slider_age.setPaintTicks(true);
        slider_age.setPaintLabels(true);

        tbpane_main.addTab("Add", pnl_add);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbpane_main, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbpane_main, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_searchActionPerformed

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) tbl_trees.getModel();
        TableRowSorter<DefaultTableModel> sortTable = new TableRowSorter<>(tableModel);
        tbl_trees.setRowSorter(sortTable);
        sortTable.setRowFilter(RowFilter.regexFilter(txt_search.getText()));
        
        ArrayList<MeroRukhModel> searchModel = (ArrayList<MeroRukhModel>) performBinarySearchAll(
        txt_search.getText(),tree_list,0,
        tree_list.size()-1);
        
//         for(MeroRukhModel model:searchModel)
//        {
//            //System.out.println("Name: "+searchModel.getsNo());
////                     "\t Scientific Name: "+model.getScientific_name()+
////                    "\t Family: "+model.getHeight()+
////                    "\t Harvest Season: "+model.getWidth()+
////                    "\t Days to maturity: "+model.getOrigin()+
////                    "\t Price: "+model.getAge()+
////                    "\t Weight: "+model.getShape());            
//        }
    }//GEN-LAST:event_btn_searchActionPerformed

    private void btn_sortascActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sortascActionPerformed
//        MergeSortAlgorithm algorithm_asc = new MergeSortAlgorithm();
        //MeroRukhModel model = new MeroRukhModel(getSerialNoFromTable(), getNameFromTable(), getScientificNameFromTable(), getHeightFromTable(), getWidthFromTable(), getoriginFromTable(),getAgeFromTable(), getShapeFromTable());
//        MeroRukhModel sort =  algorithm_asc.MergeSortAlgorithm(model);
//        System.out.println(Arrays.toString(sort.getAge()));
        // TODO add your handling code here:
//           String selectedCriteria = cmb_sort.getSelectedItem().toString();
        String selectedSort = cmb_sort.getSelectedItem().toString();

        // Assuming you have an instance of MergeSortAlgorithm
        MergeSortAlgorithm mergeSort = new MergeSortAlgorithm();

        // Check the selectedSort value and call the appropriate sorting method
        if (selectedSort.equals("Name")) {
            mergeSort.MergeSortAlgorithm(model);  // Replace yourModelInstance with your actual instance
        } else if (selectedSort.equals("Height")) {
            mergeSort.divide(model.getsNo(), model.getTree_name(), model.getHeight());
        }
    
    }//GEN-LAST:event_btn_sortascActionPerformed

    private void btn_sortdescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sortdescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_sortdescActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        
        
        DefaultTableModel MeroRukhModel = (DefaultTableModel) tbl_trees.getModel();
        int selected_index = tbl_trees.getSelectedRow();
        if(selected_index != -1)
            MeroRukhModel.removeRow(tbl_trees.getSelectedRow());
        else
            JOptionPane.showMessageDialog(null, StringUtils.WARNING_PROMPT_UNSELECTED, "Warning", JOptionPane.WARNING_MESSAGE);
        
                // TODO add your handling code here:
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        // TODO add your handling code here:
        int selected_index = tbl_trees.getSelectedRow();
        if(selected_index != -1){
            tbpane_main.setSelectedIndex(1);
            int currentRow = tbl_trees.getSelectedRow();    
            spinner_serialNo.setValue(Integer.valueOf(tbl_trees.getValueAt(currentRow, 0).toString()));
            txt_treeName.setText(tbl_trees.getValueAt(currentRow, 1).toString());
            txt_scientificName.setText(tbl_trees.getValueAt(currentRow, 2).toString());
            txt_height.setText( tbl_trees.getValueAt(currentRow,3).toString());
            txt_width.setText(tbl_trees.getValueAt(currentRow, 4).toString());
            cmb_location.setSelectedItem(tbl_trees.getValueAt(currentRow, 5).toString());
            slider_age.setValue(Integer.parseInt(tbl_trees.getValueAt(currentRow, 6).toString()));
            cmb_shape.setSelectedItem(tbl_trees.getValueAt(currentRow, 7).toString());
            
            
        }
        else
            JOptionPane.showMessageDialog(null, StringUtils.WARNING_PROMPT_UNSELECTED, "Warning", JOptionPane.WARNING_MESSAGE);
        
    }//GEN-LAST:event_btn_updateActionPerformed

    
    private void txt_scientificNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_scientificNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_scientificNameActionPerformed

    private void txt_heightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_heightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_heightActionPerformed

    private void txt_widthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_widthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_widthActionPerformed
    private ArrayList<Object> get_data(){
        int rows = tbl_trees.getRowCount();
        int serialNo = rows+1;
        ArrayList<Object> treeData = new ArrayList<>();
        String treeName = txt_treeName.getText();
        String scientificName = txt_scientificName.getText();
        int height = Integer.parseInt(txt_height.getText());
        int width = Integer.parseInt(txt_width.getText());
        String age = String.valueOf(slider_age.getValue());
        String location = String.valueOf(cmb_shape.getSelectedItem());
        String shape = String.valueOf(cmb_location.getSelectedItem());
        if("".equals(treeName)){
            JOptionPane.showInternalMessageDialog(null, "Enter Values in text Field");
            return null;
        }
        else{
        
        treeData.add(serialNo);
        treeData.add(treeName);
        treeData.add(scientificName);
        treeData.add(height);
        treeData.add(width);
        treeData.add(age);
        treeData.add(location);
        treeData.add(shape);
         return treeData;
        }
       
    }
    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        ArrayList<Object> treeData = get_data();
        
        DefaultTableModel model = (DefaultTableModel) tbl_trees.getModel();
        if(!(treeData.isEmpty()))
            model.addRow(treeData.toArray());
        tbpane_main.setSelectedIndex(0);
        clear();
        
            
        
        
        
    }//GEN-LAST:event_btn_addActionPerformed

    public void clear(){
        txt_treeName.setText(null);
        txt_scientificName.setText(null);
        txt_height.setText(null);
        txt_width.setText(null);
        slider_age.setValue(50);
        spinner_serialNo.setValue(0);
    
    }
    
    private void tbl_treesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_treesMouseClicked
        
                
        
        
    }//GEN-LAST:event_tbl_treesMouseClicked

    private void btn_nextpageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextpageActionPerformed
        tbpane_main.setSelectedIndex(1);
                // TODO add your handling code here:
    }//GEN-LAST:event_btn_nextpageActionPerformed

    private void btn_updateMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateMainActionPerformed
        int currentRow = tbl_trees.getSelectedRow();
                
        String name = txt_treeName.getText();
        String scientificName= txt_scientificName.getText();
        int height = Integer.parseInt(txt_height.getText());
        int width = Integer.parseInt(txt_width.getText());
        String shape = (cmb_shape.getSelectedItem().toString());
        int sNo =(int)spinner_serialNo.getValue();
        String location =  cmb_location.getSelectedItem().toString();               
        int age = slider_age.getValue();
        
        tbl_trees.setValueAt(sNo, currentRow, 0);
        tbl_trees.setValueAt(name, currentRow, 1);
        tbl_trees.setValueAt(scientificName, currentRow, 2);
        tbl_trees.setValueAt(height, currentRow, 3);
        tbl_trees.setValueAt(width, currentRow, 4);
        tbl_trees.setValueAt(location, currentRow, 5);
        tbl_trees.setValueAt(age, currentRow, 6);
        tbl_trees.setValueAt(shape, currentRow, 7);
            
        tbpane_main.setSelectedIndex(0); 
    }//GEN-LAST:event_btn_updateMainActionPerformed

    private void cmb_locationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_locationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_locationActionPerformed

    private void slider_ageStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider_ageStateChanged
        txt_age.setText(String.valueOf(slider_age.getValue())+" Years");                // TODO add your handling code here:
    }//GEN-LAST:event_slider_ageStateChanged

    private void txt_ageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ageActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        tbpane_main.setSelectedIndex(0);
        
    }//GEN-LAST:event_btn_backActionPerformed

    private void cmb_shapeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_shapeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_shapeActionPerformed

    private void txt_treeNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_treeNameKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c)
                || c== KeyEvent.VK_BACK_SPACE
                || c== KeyEvent.VK_DELETE))
            evt.consume();
        
        if(Character.isDigit(c))
            JOptionPane.showMessageDialog(rootPane, WARNING_PROMPT_ALPHABETS);
            // TODO add your handling code here:
    }//GEN-LAST:event_txt_treeNameKeyTyped

    private void txt_scientificNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_scientificNameKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || c== KeyEvent.VK_BACK_SPACE
                || c== KeyEvent.VK_DELETE))
            evt.consume();  
        if(Character.isDigit(c))
            JOptionPane.showMessageDialog(rootPane, WARNING_PROMPT_ALPHABETS);
// TODO add your handling code here:
    }//GEN-LAST:event_txt_scientificNameKeyTyped

    private void txt_heightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_heightKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)
                || c== KeyEvent.VK_BACK_SPACE
                || c== KeyEvent.VK_DELETE)){
            
            evt.consume();
        }
        
        if(Character.isAlphabetic(c)){
                        JOptionPane.showMessageDialog(rootPane, WARNING_PROMPT_NUMBERS);

        }
    
                // TODO add your handling code here:
    }//GEN-LAST:event_txt_heightKeyTyped

    private void txt_widthKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_widthKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)
                || c== KeyEvent.VK_BACK_SPACE
                || c== KeyEvent.VK_DELETE))
            evt.consume();
        
        if(Character.isAlphabetic(c))
                        JOptionPane.showMessageDialog(rootPane, WARNING_PROMPT_NUMBERS);
                        
    }//GEN-LAST:event_txt_widthKeyTyped
   
    public int getSerialNoFromTable(){
        int nrows= tbl_trees.getRowCount();
        if (nrows >= 0 && nrows < tbl_trees.getRowCount()) {
        // Access the value safely
            return (int) tbl_trees.getValueAt(nrows, 0);
        } else {
        // Handle the case where the index is out of bounds
            return 0;
    }
    }
    
    public String getNameFromTable(){
        int nrows= tbl_trees.getRowCount();
//        String[] name = new String[nrows];
//        
//        for(int i=0; i<nrows; i++ )
//            name[i] =tbl_trees.getValueAt(nrows, 1).toString();
//        
//        return name;
        if (nrows >= 0 && nrows < tbl_trees.getRowCount()) {
        // Access the value safely
            return tbl_trees.getValueAt(nrows, 1).toString();
        } else {
        // Handle the case where the index is out of bounds
            return "Index out of bounds";
        }
    }
    public String getScientificNameFromTable(){
        int nrows= tbl_trees.getRowCount();
        if (nrows >= 0 && nrows < tbl_trees.getRowCount()) {
        // Access the value safely
            return tbl_trees.getValueAt(nrows, 2).toString();
        } else {
        // Handle the case where the index is out of bounds
            return "Index out of bounds";
        }
    }
    
    public int getHeightFromTable(){
        int nrows= tbl_trees.getRowCount();
        if (nrows >= 0 && nrows < tbl_trees.getRowCount()) {
        // Access the value safely
            return (int) tbl_trees.getValueAt(nrows, 3);
        } else {
        // Handle the case where the index is out of bounds
            return 0;
    }
    }
    
    public int getWidthFromTable(){
        int nrows= tbl_trees.getRowCount();
        if (nrows >= 0 && nrows < tbl_trees.getRowCount()) {
        // Access the value safely
            return (int) tbl_trees.getValueAt(nrows, 4);
        } else {
        // Handle the case where the index is out of bounds
            return 0;
    }
    }
    
    public String getoriginFromTable(){
        int nrows= tbl_trees.getRowCount();
        if (nrows >= 0 && nrows < tbl_trees.getRowCount()) {
        // Access the value safely
            return tbl_trees.getValueAt(nrows, 5).toString();
        } else {
        // Handle the case where the index is out of bounds
            return "Index out of bounds";
        }
    }
    public int getAgeFromTable(){
        int nrows= tbl_trees.getRowCount();
        if (nrows >= 0 && nrows < tbl_trees.getRowCount()) {
        // Access the value safely
            return (int) tbl_trees.getValueAt(nrows, 6);
        } else {
        // Handle the case where the index is out of bounds
        return 0;
        }
    }
    public String getShapeFromTable(){
        int nrows= tbl_trees.getRowCount();
        if (nrows >= 0 && nrows < tbl_trees.getRowCount()) {
        // Access the value safely
            return tbl_trees.getValueAt(nrows, 7).toString();
        } else {
        // Handle the case where the index is out of bounds
            return "Index out of bounds";
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MeroRukh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MeroRukh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MeroRukh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MeroRukh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MeroRukh().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_nextpage;
    private javax.swing.JButton btn_search;
    private javax.swing.JButton btn_sortasc;
    private javax.swing.JButton btn_sortdesc;
    private javax.swing.JButton btn_update;
    private javax.swing.JButton btn_updateMain;
    private javax.swing.JComboBox<String> cmb_location;
    private javax.swing.JComboBox<String> cmb_shape;
    private javax.swing.JComboBox<String> cmb_sort;
    private javax.swing.JLabel lbl_addtrees;
    private javax.swing.JLabel lbl_info;
    private javax.swing.JLabel lbl_logo;
    private javax.swing.JPanel pnl_add;
    private javax.swing.JPanel pnl_main;
    private javax.swing.JScrollPane scrlpane_table;
    private javax.swing.JSlider slider_age;
    private javax.swing.JSpinner spinner_serialNo;
    private javax.swing.JTable tbl_trees;
    private javax.swing.JTabbedPane tbpane_home;
    private javax.swing.JTabbedPane tbpane_main;
    private javax.swing.JTextField txt_age;
    private javax.swing.JTextField txt_height;
    private javax.swing.JTextField txt_scientificName;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_treeName;
    private javax.swing.JTextField txt_width;
    // End of variables declaration//GEN-END:variables
}
